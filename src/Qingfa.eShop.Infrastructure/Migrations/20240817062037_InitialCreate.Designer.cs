// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QingFa.EShop.Infrastructure.Persistence;

#nullable disable

namespace Qingfa.eShop.Infrastructure.Migrations
{
    [DbContext(typeof(EShopDbContext))]
    [Migration("20240817062037_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("QingFa.EShop.Domain.Catalogs.Aggregates.Brand", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.ComplexProperty<Dictionary<string, object>>("Seo", "QingFa.EShop.Domain.Catalogs.Aggregates.Brand.Seo#SeoInfo", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("CanonicalURL")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaTitle")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT");

                            b1.Property<string>("URLSlug")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");
                        });

                    b.HasKey("Id");

                    b.HasIndex("LogoUrl")
                        .HasDatabaseName("IX_Brands_LogoUrl");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Brands_Name");

                    b.ToTable("Brands", (string)null);
                });

            modelBuilder.Entity("QingFa.EShop.Domain.Catalogs.Aggregates.CatalogItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StockLevel")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.ComplexProperty<Dictionary<string, object>>("Price", "QingFa.EShop.Domain.Catalogs.Aggregates.CatalogItem.Price#Price", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<decimal>("Amount")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("TEXT");
                        });

                    b.HasKey("Id");

                    b.HasIndex("SKU")
                        .HasDatabaseName("IX_CatalogItems_SKU");

                    b.ToTable("CatalogItems", (string)null);
                });

            modelBuilder.Entity("QingFa.EShop.Domain.Catalogs.Aggregates.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BannerURL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IncludeToStore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.ComplexProperty<Dictionary<string, object>>("Seo", "QingFa.EShop.Domain.Catalogs.Aggregates.Category.Seo#SeoInfo", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("CanonicalURL")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaTitle")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT");

                            b1.Property<string>("URLSlug")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");
                        });

                    b.HasKey("Id");

                    b.HasIndex("IncludeToStore")
                        .HasDatabaseName("IX_Category_IncludeToStore");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Category_Name");

                    b.HasIndex("ParentId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Category_Status");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("QingFa.EShop.Domain.Catalogs.Entities.AttributeOption", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttributeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("OptionValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId")
                        .HasDatabaseName("IX_AttributeOptions_AttributeId");

                    b.HasIndex("OptionValue")
                        .HasDatabaseName("IX_AttributeOptions_OptionValue");

                    b.HasIndex("AttributeId", "IsDefault")
                        .HasDatabaseName("IX_AttributeOptions_AttributeId_IsDefault");

                    b.ToTable("AttributeOptions", (string)null);
                });

            modelBuilder.Entity("QingFa.EShop.Domain.Catalogs.Entities.CatalogAttribute", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AttributeCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupAttributeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("GroupAttributeId");

                    b.Property<bool>("IsFilterable")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<bool>("ShowToCustomers")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<short>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AttributeCode")
                        .HasDatabaseName("IX_CatalogAttributes_AttributeCode");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_CatalogAttributes_Name");

                    b.HasIndex("Type", "Status")
                        .HasDatabaseName("IX_CatalogAttributes_Type_Status");

                    b.ToTable("CatalogAttributes", (string)null);
                });

            modelBuilder.Entity("QingFa.EShop.Domain.Catalogs.Entities.CatalogAttributeGroup", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<short>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_CatalogAttributeGroups_Name");

                    b.HasIndex("SortOrder")
                        .HasDatabaseName("IX_CatalogAttributeGroups_SortOrder");

                    b.ToTable("CatalogAttributeGroups", (string)null);
                });

            modelBuilder.Entity("QingFa.EShop.Domain.Catalogs.Entities.CatalogAttributeValue", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttributeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CatalogItemId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVisibleToCustomer")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OptionId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("VariantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId")
                        .HasDatabaseName("IX_CatalogAttributeValues_AttributeId");

                    b.HasIndex("CatalogItemId")
                        .HasDatabaseName("IX_CatalogAttributeValues_CatalogItemId");

                    b.HasIndex("OptionId");

                    b.ToTable("ProductAttributeValues", (string)null);
                });

            modelBuilder.Entity("QingFa.EShop.Domain.Catalogs.Aggregates.Category", b =>
                {
                    b.HasOne("QingFa.EShop.Domain.Catalogs.Aggregates.Category", null)
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("QingFa.EShop.Domain.Catalogs.Entities.AttributeOption", b =>
                {
                    b.HasOne("QingFa.EShop.Domain.Catalogs.Entities.CatalogAttribute", null)
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QingFa.EShop.Domain.Catalogs.Entities.CatalogAttributeValue", b =>
                {
                    b.HasOne("QingFa.EShop.Domain.Catalogs.Entities.CatalogAttribute", null)
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QingFa.EShop.Domain.Catalogs.Aggregates.CatalogItem", null)
                        .WithMany()
                        .HasForeignKey("CatalogItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QingFa.EShop.Domain.Catalogs.Entities.AttributeOption", null)
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
